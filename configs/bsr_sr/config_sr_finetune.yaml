sf: 4

model:
  base_learning_rate: 1e-04 # 5.0e-05
  # target: ldm.models.diffusion.ddpm.LatentDiffusionSR

params:
    linear_start: 0.0015
    linear_end: 0.0155
    log_every_t: 100
    timesteps: 1000
    loss_type: l2
    first_stage_key: image
    cond_stage_key: LR_image
    image_size: 128
    channels: 3
    concat_mode: true
    cond_stage_trainable: false
    use_usm: True
    ignore_keys: ['jpeger']

unet_config:
    # target: ldm.modules.diffusionmodules.openaimodel.UNetModel
    # params:
    image_size: 128
    in_channels: 6
    out_channels: 3
    model_channels: 160
    attention_resolutions:
    - 16
    - 8
    num_res_blocks: 2
    channel_mult:
    - 1
    - 2
    - 2
    - 4
    num_head_channels: 32

DiT_config:
    input_size: 128 
    in_channels: 3

ESRT_config:
    upscale: 4

SWIFT_config:
    img_size: 128
    patch_size: 1
    in_channels: 6
    embd_dim: 64
    rfbs: [2, 2, 2, 2]
    depths: [2, 2, 2, 2]
    num_heads: [8, 8, 8, 8,8]
    mlp_ratio: 1
    window_size: 8
    residual_conv: "3conv"
    scale: 4
    feat_scale: False
    attn_scale: True

first_stage_config:
    # target: ldm.models.autoencoder.VQModelInterface
    # params:
    embed_dim: 3
    n_embed: 8192
    monitor: val/rec_loss
    ckpt_path: 
    ddconfig:
      double_z: false
      z_channels: 3
      resolution: 256
      in_channels: 3
      out_ch: 3
      ch: 128
      ch_mult:
      - 1
      - 2
      - 4
      num_res_blocks: 2
      attn_resolutions: []
      dropout: 0.0
    lossconfig:
      target: ldm.modules.losses.LPIPSWithDiscriminator

cond_stage_config:
    target: torch.nn.Identity

degradation:
  # the first degradation process
  resize_prob: [0.2, 0.7, 0.1]  # up, down, keep
  resize_range: [0.3, 1.5]
  gaussian_noise_prob: 0.5
  noise_range: [1, 15]
  poisson_scale_range: [0.05, 2.0]
  gray_noise_prob: 0.4
  jpeg_range: [60, 95]

  # the second degradation process
  second_blur_prob: 0.5
  resize_prob2: [0.3, 0.4, 0.3]  # up, down, keep
  resize_range2: [0.6, 1.2]
  gaussian_noise_prob2: 0.5
  noise_range2: [1, 12]
  poisson_scale_range2: [0.05, 1.0]
  gray_noise_prob2: 0.4
  jpeg_range2: [60, 100]

  gt_size: 512

data:
  # target: main.DataModuleFromConfig
  # params:
    batch_size: 2
    num_workers: 0
    wrap: false
    train:
      # target: basicsr.data.realesrgan_dataset.RealESRGANDataset
      # params:
      gt_path: []
      face_gt_path: '/mnt/lustre/share/jywang/dataset/FFHQ/1024/'
      num_face: 10000
      crop_size: 512
      io_backend:
        type: disk

      blur_kernel_size: 21
      kernel_list: ['iso', 'aniso', 'generalized_iso', 'generalized_aniso', 'plateau_iso', 'plateau_aniso']
      kernel_prob: [0.45, 0.25, 0.12, 0.03, 0.12, 0.03]
      sinc_prob: 0.1
      blur_sigma: [0.2, 1.5]
      betag_range: [0.5, 2.0]
      betap_range: [1, 1.5]

      blur_kernel_size2: 11
      kernel_list2: ['iso', 'aniso', 'generalized_iso', 'generalized_aniso', 'plateau_iso', 'plateau_aniso']
      kernel_prob2: [0.45, 0.25, 0.12, 0.03, 0.12, 0.03]
      sinc_prob2: 0.1
      blur_sigma2: [0.2, 1.0]
      betag_range2: [0.5, 2.0]
      betap_range2: [1, 1.5]

      final_sinc_prob: 0.8

      gt_size: 2040
      use_hflip: True
      use_rot: False
    validation:
      # target: basicsr.data.realesrgan_dataset.RealESRGANDataset
      # params:
      gt_path:   
      crop_size: 512
      io_backend:
        type: disk

      blur_kernel_size: 21
      kernel_list: ['iso', 'aniso', 'generalized_iso', 'generalized_aniso', 'plateau_iso', 'plateau_aniso']
      kernel_prob: [0.45, 0.25, 0.12, 0.03, 0.12, 0.03]
      sinc_prob: 0.1
      blur_sigma: [0.2, 1.5]
      betag_range: [0.5, 2.0]
      betap_range: [1, 1.5]

      blur_kernel_size2: 11
      kernel_list2: ['iso', 'aniso', 'generalized_iso', 'generalized_aniso', 'plateau_iso', 'plateau_aniso']
      kernel_prob2: [0.45, 0.25, 0.12, 0.03, 0.12, 0.03]
      sinc_prob2: 0.1
      blur_sigma2: [0.2, 1.0]
      betag_range2: [0.5, 2.0]
      betap_range2: [1, 1.5]

      final_sinc_prob: 0.8

      gt_size: 128
      use_hflip: True
      use_rot: False

lightning:
  modelcheckpoint:
    params:
      every_n_train_steps: 5000
  callbacks:
    image_logger:
      target: main.ImageLogger
      params:
        batch_frequency: 5000
        max_images: 4
        increase_log_steps: False

  trainer:
    benchmark: True
    max_steps: 800000
    accumulate_grad_batches: 3
